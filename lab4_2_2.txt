#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
    pid_t pid;
    int num;

    pid = fork(); // 创建子进程

    if (pid < 0) { // 如果出错，输出错误信息
        fprintf(stderr, "Fork failed");
        return 1;
    } else if (pid == 0) { // 如果是子进程
        printf("Please enter a number: ");
        scanf("%d", &num); // 让用户输入一个数
        printf("Child process is now exiting\n");
        exit(num); // 将用户输入的数作为子进程的返回值
    } else { // 如果是父进程
        wait(&num); // 等待子进程执行完毕，并获取子进程的返回值
        printf("The child process returned %d\n", WEXITSTATUS(num)); // 输出子进程的返回值
        printf("Parent process is now exiting\n");
    }

    return 0;
}
